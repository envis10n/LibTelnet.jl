using LibTelnet
using Test

test_data::Vector{UInt8} = [0xff, 0xfd, 0xc9, 0xff, 0xfa, 0xc9, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x7b, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x30, 0x2e, 0x31, 0x2e, 0x36, 0x22, 0x2c, 0x22, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x22, 0x44, 0x65, 0x6e, 0x6f, 0x54, 0x65, 0x6c, 0x20, 0x28, 0x44, 0x65, 0x6e, 0x6f, 0x29, 0x22, 0x7d, 0xff, 0xf0]

@testset "Parser" begin
    input::Vector{UInt8} = Vector{UInt8}(undef, length(test_data))
    copy!(input, test_data)
    res = LibTelnet.Parser.parse(input)
    @test length(res) == 2
    @test res[1] == [0xff, 0xfd, 0xc9]
    @test res[2] == [0xff, 0xfa, 0xc9, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x7b, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x30, 0x2e, 0x31, 0x2e, 0x36, 0x22, 0x2c, 0x22, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x22, 0x44, 0x65, 0x6e, 0x6f, 0x54, 0x65, 0x6c, 0x20, 0x28, 0x44, 0x65, 0x6e, 0x6f, 0x29, 0x22, 0x7d, 0xff, 0xf0]
end

test_data_mudlet::Vector{UInt8} = [0xff, 0xfd, 0xc9, 0xff, 0xfa, 0xc9, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x7b, 0x20, 0x22, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x75, 0x64, 0x6c, 0x65, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x20, 0x22, 0x34, 0x2e, 0x31, 0x37, 0x2e, 0x32, 0x22, 0x7d, 0xff, 0xf0, 0xff, 0xfa, 0xc9, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x20, 0x5b, 0x20, 0x22, 0x43, 0x68, 0x61, 0x72, 0x20, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x43, 0x68, 0x61, 0x72, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x20, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x43, 0x68, 0x61, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x52, 0x6f, 0x6f, 0x6d, 0x20, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x49, 0x52, 0x45, 0x2e, 0x52, 0x69, 0x66, 0x74, 0x20, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x49, 0x52, 0x45, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x20, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x20, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x31, 0x22, 0x5d, 0xff, 0xf0, 0xff, 0xfa, 0xc9, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0xff, 0xf0]

@testset "Mudlet Parser" begin
    res = LibTelnet.Parser.parse_events(test_data_mudlet)
    for ev in res
        println(ev)
    end
end